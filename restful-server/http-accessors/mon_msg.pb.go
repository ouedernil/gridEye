// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mon_msg.proto

package http_accessors

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MonitoringEvtEnumMsgId int32

const (
	MonitoringEvt_measureNotify    MonitoringEvtEnumMsgId = 1
	MonitoringEvt_alarmNotify      MonitoringEvtEnumMsgId = 2
	MonitoringEvt_regMeasureNotify MonitoringEvtEnumMsgId = 3
)

var MonitoringEvtEnumMsgId_name = map[int32]string{
	1: "measureNotify",
	2: "alarmNotify",
	3: "regMeasureNotify",
}
var MonitoringEvtEnumMsgId_value = map[string]int32{
	"measureNotify":    1,
	"alarmNotify":      2,
	"regMeasureNotify": 3,
}

func (x MonitoringEvtEnumMsgId) Enum() *MonitoringEvtEnumMsgId {
	p := new(MonitoringEvtEnumMsgId)
	*p = x
	return p
}
func (x MonitoringEvtEnumMsgId) String() string {
	return proto.EnumName(MonitoringEvtEnumMsgId_name, int32(x))
}
func (x *MonitoringEvtEnumMsgId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MonitoringEvtEnumMsgId_value, data, "MonitoringEvtEnumMsgId")
	if err != nil {
		return err
	}
	*x = MonitoringEvtEnumMsgId(value)
	return nil
}
func (MonitoringEvtEnumMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type MonMsgEnumMsgId int32

const (
	MonMsg_update_config MonMsgEnumMsgId = 1
	MonMsg_max_msg_id    MonMsgEnumMsgId = 80
)

var MonMsgEnumMsgId_name = map[int32]string{
	1:  "update_config",
	80: "max_msg_id",
}
var MonMsgEnumMsgId_value = map[string]int32{
	"update_config": 1,
	"max_msg_id":    80,
}

func (x MonMsgEnumMsgId) Enum() *MonMsgEnumMsgId {
	p := new(MonMsgEnumMsgId)
	*p = x
	return p
}
func (x MonMsgEnumMsgId) String() string {
	return proto.EnumName(MonMsgEnumMsgId_name, int32(x))
}
func (x *MonMsgEnumMsgId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MonMsgEnumMsgId_value, data, "MonMsgEnumMsgId")
	if err != nil {
		return err
	}
	*x = MonMsgEnumMsgId(value)
	return nil
}
func (MonMsgEnumMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type MonitoringEvt struct {
	MsgId            *MonitoringEvtEnumMsgId `protobuf:"varint,2,req,name=msg_id,json=msgId,enum=MonitoringEvtEnumMsgId" json:"msg_id,omitempty"`
	MonMeasureMsg    *MonMeasure             `protobuf:"bytes,3,opt,name=mon_measure_msg,json=monMeasureMsg" json:"mon_measure_msg,omitempty"`
	RegMeasureMsg    *RegMeasure             `protobuf:"bytes,4,opt,name=reg_measure_msg,json=regMeasureMsg" json:"reg_measure_msg,omitempty"`
	AlarmStartEndMsg *Alarm                  `protobuf:"bytes,5,opt,name=alarm_start_end_msg,json=alarmStartEndMsg" json:"alarm_start_end_msg,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *MonitoringEvt) Reset()                    { *m = MonitoringEvt{} }
func (m *MonitoringEvt) String() string            { return proto.CompactTextString(m) }
func (*MonitoringEvt) ProtoMessage()               {}
func (*MonitoringEvt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MonitoringEvt) GetMsgId() MonitoringEvtEnumMsgId {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return MonitoringEvt_measureNotify
}

func (m *MonitoringEvt) GetMonMeasureMsg() *MonMeasure {
	if m != nil {
		return m.MonMeasureMsg
	}
	return nil
}

func (m *MonitoringEvt) GetRegMeasureMsg() *RegMeasure {
	if m != nil {
		return m.RegMeasureMsg
	}
	return nil
}

func (m *MonitoringEvt) GetAlarmStartEndMsg() *Alarm {
	if m != nil {
		return m.AlarmStartEndMsg
	}
	return nil
}

type Alarm struct {
	SrcId            *uint32 `protobuf:"varint,1,req,name=src_id,json=srcId" json:"src_id,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	AlarmStartType   *uint32 `protobuf:"varint,3,req,name=alarm_start_type,json=alarmStartType" json:"alarm_start_type,omitempty"`
	AlarmEndType     *uint32 `protobuf:"varint,4,req,name=alarm_end_type,json=alarmEndType" json:"alarm_end_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Alarm) Reset()                    { *m = Alarm{} }
func (m *Alarm) String() string            { return proto.CompactTextString(m) }
func (*Alarm) ProtoMessage()               {}
func (*Alarm) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Alarm) GetSrcId() uint32 {
	if m != nil && m.SrcId != nil {
		return *m.SrcId
	}
	return 0
}

func (m *Alarm) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Alarm) GetAlarmStartType() uint32 {
	if m != nil && m.AlarmStartType != nil {
		return *m.AlarmStartType
	}
	return 0
}

func (m *Alarm) GetAlarmEndType() uint32 {
	if m != nil && m.AlarmEndType != nil {
		return *m.AlarmEndType
	}
	return 0
}

type MonMsg struct {
	MsgId            *MonMsgEnumMsgId         `protobuf:"varint,1,req,name=msg_id,json=msgId,enum=MonMsgEnumMsgId" json:"msg_id,omitempty"`
	UpdateConfigMsg  *MonRemoteConfigOneParam `protobuf:"bytes,2,opt,name=update_config_msg,json=updateConfigMsg" json:"update_config_msg,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *MonMsg) Reset()                    { *m = MonMsg{} }
func (m *MonMsg) String() string            { return proto.CompactTextString(m) }
func (*MonMsg) ProtoMessage()               {}
func (*MonMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MonMsg) GetMsgId() MonMsgEnumMsgId {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return MonMsg_update_config
}

func (m *MonMsg) GetUpdateConfigMsg() *MonRemoteConfigOneParam {
	if m != nil {
		return m.UpdateConfigMsg
	}
	return nil
}

type MonRemoteConfig struct {
	SrcId                *uint32 `protobuf:"varint,1,req,name=src_id,json=srcId" json:"src_id,omitempty"`
	MonitorFreq          *uint32 `protobuf:"varint,2,req,name=monitor_freq,json=monitorFreq" json:"monitor_freq,omitempty"`
	UOverThresh          *uint32 `protobuf:"varint,3,req,name=u_over_thresh,json=uOverThresh" json:"u_over_thresh,omitempty"`
	UOverViolTime        *uint32 `protobuf:"varint,4,req,name=u_over_viol_time,json=uOverViolTime" json:"u_over_viol_time,omitempty"`
	UOverHysteresis      *uint32 `protobuf:"varint,5,req,name=u_over_hysteresis,json=uOverHysteresis" json:"u_over_hysteresis,omitempty"`
	UUnderThresh         *uint32 `protobuf:"varint,6,req,name=u_under_thresh,json=uUnderThresh" json:"u_under_thresh,omitempty"`
	UUnderViolTime       *uint32 `protobuf:"varint,7,req,name=u_under_viol_time,json=uUnderViolTime" json:"u_under_viol_time,omitempty"`
	UUnderHysteresis     *uint32 `protobuf:"varint,8,req,name=u_under_hysteresis,json=uUnderHysteresis" json:"u_under_hysteresis,omitempty"`
	IOverThresh          *uint32 `protobuf:"varint,10,req,name=i_over_thresh,json=iOverThresh" json:"i_over_thresh,omitempty"`
	IOverViolTime        *uint32 `protobuf:"varint,11,req,name=i_over_viol_time,json=iOverViolTime" json:"i_over_viol_time,omitempty"`
	IOverHysteresis      *uint32 `protobuf:"varint,12,req,name=i_over_hysteresis,json=iOverHysteresis" json:"i_over_hysteresis,omitempty"`
	InOverThresh         *uint32 `protobuf:"varint,13,req,name=in_over_thresh,json=inOverThresh" json:"in_over_thresh,omitempty"`
	InOverViolTime       *uint32 `protobuf:"varint,14,req,name=in_over_viol_time,json=inOverViolTime" json:"in_over_viol_time,omitempty"`
	InOverHysteresis     *uint32 `protobuf:"varint,15,req,name=in_over_hysteresis,json=inOverHysteresis" json:"in_over_hysteresis,omitempty"`
	ThdsOverThresh       *uint32 `protobuf:"varint,16,req,name=thds_over_thresh,json=thdsOverThresh" json:"thds_over_thresh,omitempty"`
	ThdsOverViolTime     *uint32 `protobuf:"varint,17,req,name=thds_over_viol_time,json=thdsOverViolTime" json:"thds_over_viol_time,omitempty"`
	ThdsOverHysteresis   *uint32 `protobuf:"varint,18,req,name=thds_over_hysteresis,json=thdsOverHysteresis" json:"thds_over_hysteresis,omitempty"`
	ThdisOverThresh      *uint32 `protobuf:"varint,19,req,name=thdis_over_thresh,json=thdisOverThresh" json:"thdis_over_thresh,omitempty"`
	ThdisOverViolTime    *uint32 `protobuf:"varint,20,req,name=thdis_over_viol_time,json=thdisOverViolTime" json:"thdis_over_viol_time,omitempty"`
	ThdisOverHysteresis  *uint32 `protobuf:"varint,21,req,name=thdis_over_hysteresis,json=thdisOverHysteresis" json:"thdis_over_hysteresis,omitempty"`
	PwrOverThresh        *uint32 `protobuf:"varint,22,req,name=pwr_over_thresh,json=pwrOverThresh" json:"pwr_over_thresh,omitempty"`
	PwrOverViolTime      *uint32 `protobuf:"varint,23,req,name=pwr_over_viol_time,json=pwrOverViolTime" json:"pwr_over_viol_time,omitempty"`
	PwrOverHysteresis    *uint32 `protobuf:"varint,24,req,name=pwr_over_hysteresis,json=pwrOverHysteresis" json:"pwr_over_hysteresis,omitempty"`
	ImbalanceIMinThresh  *uint32 `protobuf:"varint,25,req,name=imbalance_i_min_thresh,json=imbalanceIMinThresh" json:"imbalance_i_min_thresh,omitempty"`
	ImbalanceIMaxPercent *uint32 `protobuf:"varint,26,req,name=imbalance_i_max_percent,json=imbalanceIMaxPercent" json:"imbalance_i_max_percent,omitempty"`
	ImbalanceIViolTime   *uint32 `protobuf:"varint,27,req,name=imbalance_i_viol_time,json=imbalanceIViolTime" json:"imbalance_i_viol_time,omitempty"`
	ImbalanceIHysteresis *uint32 `protobuf:"varint,28,req,name=imbalance_i_hysteresis,json=imbalanceIHysteresis" json:"imbalance_i_hysteresis,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *MonRemoteConfig) Reset()                    { *m = MonRemoteConfig{} }
func (m *MonRemoteConfig) String() string            { return proto.CompactTextString(m) }
func (*MonRemoteConfig) ProtoMessage()               {}
func (*MonRemoteConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *MonRemoteConfig) GetSrcId() uint32 {
	if m != nil && m.SrcId != nil {
		return *m.SrcId
	}
	return 0
}

func (m *MonRemoteConfig) GetMonitorFreq() uint32 {
	if m != nil && m.MonitorFreq != nil {
		return *m.MonitorFreq
	}
	return 0
}

func (m *MonRemoteConfig) GetUOverThresh() uint32 {
	if m != nil && m.UOverThresh != nil {
		return *m.UOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetUOverViolTime() uint32 {
	if m != nil && m.UOverViolTime != nil {
		return *m.UOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetUOverHysteresis() uint32 {
	if m != nil && m.UOverHysteresis != nil {
		return *m.UOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetUUnderThresh() uint32 {
	if m != nil && m.UUnderThresh != nil {
		return *m.UUnderThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetUUnderViolTime() uint32 {
	if m != nil && m.UUnderViolTime != nil {
		return *m.UUnderViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetUUnderHysteresis() uint32 {
	if m != nil && m.UUnderHysteresis != nil {
		return *m.UUnderHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetIOverThresh() uint32 {
	if m != nil && m.IOverThresh != nil {
		return *m.IOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetIOverViolTime() uint32 {
	if m != nil && m.IOverViolTime != nil {
		return *m.IOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetIOverHysteresis() uint32 {
	if m != nil && m.IOverHysteresis != nil {
		return *m.IOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetInOverThresh() uint32 {
	if m != nil && m.InOverThresh != nil {
		return *m.InOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetInOverViolTime() uint32 {
	if m != nil && m.InOverViolTime != nil {
		return *m.InOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetInOverHysteresis() uint32 {
	if m != nil && m.InOverHysteresis != nil {
		return *m.InOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetThdsOverThresh() uint32 {
	if m != nil && m.ThdsOverThresh != nil {
		return *m.ThdsOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetThdsOverViolTime() uint32 {
	if m != nil && m.ThdsOverViolTime != nil {
		return *m.ThdsOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetThdsOverHysteresis() uint32 {
	if m != nil && m.ThdsOverHysteresis != nil {
		return *m.ThdsOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetThdisOverThresh() uint32 {
	if m != nil && m.ThdisOverThresh != nil {
		return *m.ThdisOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetThdisOverViolTime() uint32 {
	if m != nil && m.ThdisOverViolTime != nil {
		return *m.ThdisOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetThdisOverHysteresis() uint32 {
	if m != nil && m.ThdisOverHysteresis != nil {
		return *m.ThdisOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetPwrOverThresh() uint32 {
	if m != nil && m.PwrOverThresh != nil {
		return *m.PwrOverThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetPwrOverViolTime() uint32 {
	if m != nil && m.PwrOverViolTime != nil {
		return *m.PwrOverViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetPwrOverHysteresis() uint32 {
	if m != nil && m.PwrOverHysteresis != nil {
		return *m.PwrOverHysteresis
	}
	return 0
}

func (m *MonRemoteConfig) GetImbalanceIMinThresh() uint32 {
	if m != nil && m.ImbalanceIMinThresh != nil {
		return *m.ImbalanceIMinThresh
	}
	return 0
}

func (m *MonRemoteConfig) GetImbalanceIMaxPercent() uint32 {
	if m != nil && m.ImbalanceIMaxPercent != nil {
		return *m.ImbalanceIMaxPercent
	}
	return 0
}

func (m *MonRemoteConfig) GetImbalanceIViolTime() uint32 {
	if m != nil && m.ImbalanceIViolTime != nil {
		return *m.ImbalanceIViolTime
	}
	return 0
}

func (m *MonRemoteConfig) GetImbalanceIHysteresis() uint32 {
	if m != nil && m.ImbalanceIHysteresis != nil {
		return *m.ImbalanceIHysteresis
	}
	return 0
}

type MonRemoteConfigOneParam struct {
	// This is directly linked to the
	// mon_remote_config
	TagMonRemoteConfig *uint32 `protobuf:"varint,2,req,name=tag_mon_remote_config,json=tagMonRemoteConfig" json:"tag_mon_remote_config,omitempty"`
	// Value to modified for selected tag
	TagValue         *uint32 `protobuf:"varint,3,req,name=tag_value,json=tagValue" json:"tag_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MonRemoteConfigOneParam) Reset()                    { *m = MonRemoteConfigOneParam{} }
func (m *MonRemoteConfigOneParam) String() string            { return proto.CompactTextString(m) }
func (*MonRemoteConfigOneParam) ProtoMessage()               {}
func (*MonRemoteConfigOneParam) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MonRemoteConfigOneParam) GetTagMonRemoteConfig() uint32 {
	if m != nil && m.TagMonRemoteConfig != nil {
		return *m.TagMonRemoteConfig
	}
	return 0
}

func (m *MonRemoteConfigOneParam) GetTagValue() uint32 {
	if m != nil && m.TagValue != nil {
		return *m.TagValue
	}
	return 0
}

func init() {
	proto.RegisterType((*MonitoringEvt)(nil), "monitoring_evt")
	proto.RegisterType((*Alarm)(nil), "alarm")
	proto.RegisterType((*MonMsg)(nil), "mon_msg")
	proto.RegisterType((*MonRemoteConfig)(nil), "mon_remote_config")
	proto.RegisterType((*MonRemoteConfigOneParam)(nil), "mon_remote_config_one_param")
	proto.RegisterEnum("MonitoringEvtEnumMsgId", MonitoringEvtEnumMsgId_name, MonitoringEvtEnumMsgId_value)
	proto.RegisterEnum("MonMsgEnumMsgId", MonMsgEnumMsgId_name, MonMsgEnumMsgId_value)
}

func init() { proto.RegisterFile("mon_msg.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x95, 0xd1, 0x6e, 0xdb, 0x36,
	0x14, 0x86, 0x21, 0x27, 0x4e, 0x9b, 0x63, 0xcb, 0x96, 0x68, 0xbb, 0xf5, 0x9a, 0x5c, 0x64, 0xc2,
	0xb0, 0xb9, 0xed, 0xe6, 0xb5, 0x5e, 0xfb, 0x04, 0x43, 0xb7, 0xe6, 0xc2, 0x5b, 0xa1, 0x65, 0xbd,
	0x25, 0x38, 0x8b, 0x91, 0x09, 0x98, 0x94, 0x4a, 0x51, 0x6e, 0x7c, 0xbf, 0xcb, 0x3d, 0xcc, 0xb0,
	0xbd, 0xe0, 0x20, 0x92, 0x92, 0xa8, 0x78, 0xed, 0x55, 0xa2, 0xc3, 0xef, 0xe7, 0xf9, 0xff, 0x73,
	0x02, 0x06, 0x7c, 0x9e, 0x09, 0xcc, 0x8b, 0x74, 0x99, 0xcb, 0x4c, 0x65, 0x4f, 0x86, 0x9b, 0x8c,
	0xf3, 0x4c, 0x98, 0xaf, 0xe8, 0xef, 0x1e, 0x8c, 0x78, 0x26, 0x98, 0xca, 0x24, 0x13, 0x29, 0xa6,
	0x7b, 0x85, 0x56, 0x70, 0xc6, 0x8b, 0x14, 0xb3, 0x64, 0xde, 0xbb, 0xea, 0x2d, 0x46, 0xab, 0x8b,
	0x65, 0x17, 0x58, 0x52, 0x51, 0x72, 0x6c, 0x90, 0xb8, 0xcf, 0x8b, 0xf4, 0x3a, 0x41, 0xaf, 0x60,
	0xac, 0xbb, 0x50, 0x52, 0x94, 0x92, 0x56, 0x87, 0xf3, 0x93, 0x2b, 0x6f, 0x31, 0x58, 0x0d, 0x97,
	0x4e, 0x3d, 0xae, 0xac, 0xac, 0xcd, 0xef, 0xeb, 0x22, 0xad, 0x54, 0x92, 0xa6, 0x1d, 0xd5, 0xa9,
	0x55, 0x39, 0xf5, 0xd8, 0x97, 0x34, 0x75, 0x54, 0xaf, 0x61, 0x42, 0x76, 0x44, 0x72, 0x5c, 0x28,
	0x22, 0x15, 0xa6, 0x22, 0xd1, 0xca, 0xbe, 0x56, 0x9e, 0x2d, 0xf5, 0x59, 0x1c, 0xe8, 0x1f, 0xbf,
	0x55, 0xc4, 0x1b, 0x91, 0xac, 0x8b, 0x34, 0xfa, 0x19, 0x06, 0x8e, 0x71, 0x14, 0x82, 0x6f, 0xef,
	0xff, 0x25, 0x53, 0xec, 0xf6, 0x10, 0x78, 0x68, 0x0c, 0x03, 0xad, 0xb2, 0x85, 0x1e, 0x9a, 0x42,
	0xd0, 0xb6, 0xb6, 0xd5, 0x93, 0xe8, 0x2f, 0x0f, 0xfa, 0x9a, 0x43, 0x33, 0x38, 0x2b, 0xe4, 0xa6,
	0x9a, 0x94, 0x77, 0xd5, 0x5b, 0xf8, 0x71, 0xbf, 0x90, 0x9b, 0xeb, 0x04, 0x5d, 0xc2, 0xb9, 0x62,
	0x9c, 0x16, 0x8a, 0xf0, 0x5c, 0xcf, 0xf0, 0x34, 0x6e, 0x0b, 0x68, 0x01, 0x81, 0x6b, 0x5f, 0x1d,
	0x72, 0x3a, 0x3f, 0xd1, 0xf2, 0x51, 0xeb, 0xf9, 0xe6, 0x90, 0x53, 0xf4, 0x15, 0x98, 0x8a, 0x8e,
	0xa8, 0xb9, 0x53, 0xcd, 0x0d, 0x75, 0xf5, 0x8d, 0x48, 0x2a, 0x2a, 0xfa, 0xc7, 0x83, 0x07, 0x76,
	0xc3, 0xe8, 0x79, 0xb3, 0x3a, 0x4f, 0xaf, 0x6e, 0xba, 0xac, 0x77, 0xff, 0x3f, 0x3b, 0x7b, 0x0b,
	0x61, 0x99, 0x27, 0x44, 0x51, 0xbc, 0xc9, 0xc4, 0x2d, 0x4b, 0xf5, 0x14, 0x7b, 0x7a, 0x8a, 0x97,
	0x5a, 0x27, 0x29, 0xcf, 0xda, 0xd3, 0x4c, 0x50, 0x9c, 0x13, 0x49, 0x78, 0x3c, 0x36, 0xb2, 0x1f,
	0x75, 0xbd, 0x1a, 0xed, 0x8b, 0xa3, 0xd1, 0x76, 0x2e, 0x0e, 0x3c, 0x34, 0x02, 0xe0, 0xe4, 0xce,
	0x02, 0xc1, 0xbb, 0xe8, 0xdf, 0x73, 0x08, 0x8f, 0x5a, 0x7c, 0x6a, 0x9e, 0x5f, 0xc2, 0xd0, 0xfe,
	0x05, 0xe2, 0x5b, 0x49, 0x3f, 0xe8, 0x91, 0xfa, 0xf1, 0xc0, 0xd6, 0x7e, 0x92, 0xf4, 0x03, 0x8a,
	0xc0, 0x2f, 0x71, 0xb6, 0xa7, 0x12, 0xab, 0xad, 0xa4, 0xc5, 0xd6, 0x4e, 0x74, 0x50, 0xfe, 0xba,
	0xa7, 0xf2, 0x46, 0x97, 0xd0, 0x37, 0x10, 0x58, 0x66, 0xcf, 0xb2, 0x1d, 0xae, 0x36, 0x62, 0x07,
	0xea, 0x6b, 0xec, 0x3d, 0xcb, 0x76, 0x37, 0x8c, 0x53, 0xf4, 0x0c, 0x42, 0x0b, 0x6e, 0x0f, 0x85,
	0xa2, 0x92, 0x16, 0xac, 0x98, 0xf7, 0x35, 0x39, 0xd6, 0xe4, 0xdb, 0xa6, 0x5c, 0xed, 0xa8, 0xc4,
	0xa5, 0x48, 0xda, 0xce, 0x67, 0x66, 0x47, 0xe5, 0xef, 0x55, 0xd1, 0xb6, 0x7e, 0x5a, 0xdd, 0x68,
	0xa8, 0xb6, 0xf7, 0x03, 0xb3, 0x74, 0x03, 0x36, 0xcd, 0xbf, 0x05, 0x54, 0xa3, 0x4e, 0xf7, 0x87,
	0x9a, 0x0d, 0x0c, 0xeb, 0xb4, 0x8f, 0xc0, 0x67, 0x9d, 0xdc, 0x60, 0x72, 0xb3, 0x6e, 0x6e, 0x76,
	0x3f, 0xf7, 0xc0, 0xe4, 0x66, 0xf7, 0x73, 0xb3, 0xa3, 0xdc, 0x43, 0x93, 0x9b, 0x1d, 0xe7, 0x66,
	0xa2, 0xd3, 0xd9, 0x37, 0xb9, 0x99, 0x70, 0x5a, 0x3f, 0x85, 0xb0, 0xa6, 0xda, 0xde, 0x23, 0x93,
	0xdb, 0x80, 0x6e, 0xee, 0x1a, 0x75, 0xba, 0x8f, 0x4d, 0x6e, 0xc3, 0x3a, 0xed, 0x17, 0x10, 0xa8,
	0x6d, 0x52, 0x74, 0x0c, 0x04, 0xe6, 0xde, 0xaa, 0xee, 0x58, 0xf8, 0x0e, 0x26, 0x2d, 0xd9, 0x9a,
	0x08, 0xcd, 0xc5, 0x35, 0xdc, 0xd8, 0x78, 0x01, 0xd3, 0x16, 0x77, 0x8c, 0x20, 0xcd, 0xa3, 0x9a,
	0x77, 0xac, 0x3c, 0x83, 0x50, 0x6d, 0x13, 0xd6, 0xf5, 0x32, 0x31, 0x53, 0xd3, 0x07, 0x8e, 0x99,
	0xef, 0xf5, 0xed, 0xec, 0xc8, 0xcd, 0x54, 0xe3, 0x61, 0x83, 0x37, 0x76, 0x56, 0x30, 0x73, 0x04,
	0x8e, 0x9f, 0x99, 0x56, 0x4c, 0x1a, 0x85, 0x63, 0xe8, 0x6b, 0x18, 0xe7, 0x1f, 0x65, 0xc7, 0xce,
	0x23, 0xb3, 0xee, 0xfc, 0xa3, 0x74, 0xcc, 0x3c, 0x07, 0xd4, 0x70, 0xad, 0x95, 0xc7, 0xc6, 0xb9,
	0x45, 0x1b, 0x23, 0x4b, 0x98, 0x34, 0xb0, 0x63, 0x63, 0x6e, 0x8c, 0x5b, 0xda, 0x31, 0xf1, 0x03,
	0x3c, 0x62, 0xfc, 0x0f, 0xb2, 0x23, 0x62, 0x43, 0x31, 0xc3, 0x9c, 0x89, 0xda, 0xcb, 0x17, 0xc6,
	0x79, 0x73, 0x7a, 0xbd, 0x66, 0xc2, 0x3a, 0x7a, 0x0d, 0x8f, 0x3b, 0x22, 0x72, 0x87, 0x73, 0x2a,
	0x37, 0x54, 0xa8, 0xf9, 0x13, 0xad, 0x9a, 0x3a, 0x2a, 0x72, 0xf7, 0xce, 0x9c, 0xa1, 0x97, 0x30,
	0x73, 0x65, 0x6d, 0x96, 0x0b, 0xb3, 0xb4, 0x56, 0xd4, 0xc4, 0x79, 0xd5, 0xb5, 0xe7, 0x24, 0xba,
	0xbc, 0xdf, 0xa8, 0x0d, 0x15, 0xfd, 0xe9, 0xc1, 0xc5, 0x67, 0x1e, 0xc6, 0x4f, 0xbd, 0x5f, 0x2f,
	0x61, 0xa6, 0x48, 0x8a, 0x8f, 0x94, 0xf6, 0x21, 0x43, 0x8a, 0xa4, 0xeb, 0x4c, 0xc4, 0xfa, 0xc8,
	0x3c, 0xaa, 0xe8, 0x02, 0xce, 0x2b, 0xc9, 0x9e, 0xec, 0xca, 0xfa, 0xbf, 0xc3, 0x43, 0x45, 0xd2,
	0xf7, 0xd5, 0xf7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x25, 0x34, 0x98, 0xa2, 0xd1, 0x07, 0x00,
	0x00,
}
